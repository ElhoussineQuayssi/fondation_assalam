<common_patterns>
  <pattern name="responsive_container">
    <description>A flexible container that adapts to different screen sizes</description>
    <css>
      .container {
        width: 100%;
        max-width: var(--breakpoint-desktop);
        margin: 0 auto;
        padding: 0 var(--spacing-md);
      }

      @media (min-width: 768px) {
        .container {
          padding: 0 var(--spacing-lg);
        }
      }
    </css>
    <usage>When creating page layouts or section containers</usage>
  </pattern>

  <pattern name="accessible_button">
    <description>A button component with proper accessibility and focus management</description>
    <jsx>
      <button
        className="btn"
        aria-label={ariaLabel}
        disabled={isDisabled}
        onClick={handleClick}
      >
        {children}
      </button>
    </jsx>
    <css>
      .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-height: 44px; /* Touch target size */
        padding: var(--spacing-sm) var(--spacing-md);
        border: 2px solid transparent;
        border-radius: 4px;
        background: var(--color-primary);
        color: var(--color-text-on-primary);
        font-family: var(--font-family-base);
        font-size: var(--font-size-base);
        cursor: pointer;
        transition: all 0.2s ease;
      }

      .btn:focus {
        outline: none;
        border-color: var(--color-focus);
        box-shadow: 0 0 0 3px var(--color-focus-shadow);
      }

      .btn:hover:not(:disabled) {
        background: var(--color-primary-hover);
      }

      .btn:disabled {
        opacity: 0.6;
        cursor: not-allowed;
      }

      @media (prefers-reduced-motion: reduce) {
        .btn {
          transition: none;
        }
      }
    </css>
    <accessibility_notes>
      <note>Minimum 44px touch target for mobile accessibility</note>
      <note>Proper focus styles with visible focus indicators</note>
      <note>Supports reduced motion preferences</note>
    </accessibility_notes>
  </pattern>

  <pattern name="fluid_typography">
    <description>Responsive typography that scales smoothly across devices</description>
    <css>
      .text-fluid {
        font-size: clamp(
          var(--font-size-sm),
          2.5vw,
          var(--font-size-xl)
        );
        line-height: 1.4;
      }
    </css>
    <usage>For headings and large text elements that need to scale</usage>
  </pattern>

  <pattern name="card_component">
    <description>A flexible card component with proper spacing and accessibility</description>
    <jsx>
      <article className="card" role="article" aria-labelledby="card-title">
        <header className="card-header">
          <h3 id="card-title">{title}</h3>
        </header>
        <div className="card-content">
          {children}
        </div>
        {footer && <footer className="card-footer">{footer}</footer>}
      </article>
    </jsx>
    <css>
      .card {
        display: flex;
        flex-direction: column;
        border: 1px solid var(--color-border);
        border-radius: 8px;
        background: var(--color-surface);
        box-shadow: var(--shadow-sm);
        overflow: hidden;
      }

      .card-header {
        padding: var(--spacing-md);
        border-bottom: 1px solid var(--color-border);
      }

      .card-content {
        flex: 1;
        padding: var(--spacing-md);
      }

      .card-footer {
        padding: var(--spacing-md);
        border-top: 1px solid var(--color-border);
        background: var(--color-surface-secondary);
      }
    </css>
  </pattern>

  <pattern name="loading_state">
    <description>Accessible loading state with screen reader support</description>
    <jsx>
      <div aria-live="polite" aria-busy={isLoading}>
        {isLoading ? (
          <div className="loading" role="status">
            <div className="spinner" aria-hidden="true"></div>
            <span className="sr-only">Loading content...</span>
          </div>
        ) : (
          content
        )}
      </div>
    </jsx>
    <css>
      .loading {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: var(--spacing-lg);
      }

      .spinner {
        width: 24px;
        height: 24px;
        border: 2px solid var(--color-border);
        border-top: 2px solid var(--color-primary);
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @media (prefers-reduced-motion: reduce) {
        .spinner {
          animation: none;
        }
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }

      .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
      }
    </css>
  </pattern>
</common_patterns>